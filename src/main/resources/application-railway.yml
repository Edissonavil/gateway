spring:
  config:
    activate:
      on-profile: railway

  cloud:
    gateway:
      routes:
        # üìÅ SERVICIO DE ARCHIVOS - CONFIGURACI√ìN MEJORADA
        - id: file-service
          uri: http://${FILE_SERVICE_URL:file-service.railway.internal}:8084
          predicates:
            - Path=/api/files/**
          filters:
            # üßπ LIMPIA HEADERS DE AUTENTICACI√ìN PARA ARCHIVOS P√öBLICOS
            - name: RemoveRequestHeader
              args:
                name: Authorization
            - name: RemoveRequestHeader  
              args:
                name: Cookie
            # üõ°Ô∏è QUITA DESAF√çOS DE AUTENTICACI√ìN
            - name: RemoveResponseHeader
              args:
                name: WWW-Authenticate
            # üåê HEADERS CORS PARA ARCHIVOS
            - name: SetResponseHeader
              args:
                name: Access-Control-Allow-Origin
                value: "*"
            - name: SetResponseHeader
              args:
                name: Access-Control-Allow-Methods  
                value: "GET, POST, OPTIONS"
            - name: SetResponseHeader
              args:
                name: Access-Control-Expose-Headers
                value: "Content-Disposition, Content-Type"
            # üìã ELIMINA DUPLICADOS
            - name: DedupeResponseHeader
              args:
                name: Access-Control-Allow-Credentials
                strategy: RETAIN_FIRST

        # üë• OTROS SERVICIOS (sin cambios)
        - id: users-service
          uri: http://${USERS_SERVICE_URL:users-service.railway.internal}:8081
          predicates:
            - Path=/api/users/**
          filters:
            - StripPrefix=0

        - id: auth-service  
          uri: http://${AUTH_SERVICE_URL:auth-service.railway.internal}:8082
          predicates:
            - Path=/api/auth/**
          filters:
            - StripPrefix=0
            - RemoveRequestHeader=Cookie

        - id: prod-service
          uri: http://${PROD_SERVICE_URL:prod-service.railway.internal}:8083
          predicates:
            - Path=/api/products/**
          filters:
            - StripPrefix=0

        - id: order-service
          uri: http://${ORDER_SERVICE_URL:order-service-deploy.railway.internal}:8085
          predicates:
            - Path=/api/orders/**
          filters:
            - StripPrefix=0

        - id: stats-service
          uri: http://${STATS_SERVICE_URL:stats-service.railway.internal}:8086
          predicates:
            - Path=/api/stats/**
          filters:
            - StripPrefix=1

        - id: aecf-frontend
          uri: http://aecf.railway.internal:80
          predicates:
            - Path=/, /index.html, /static/**, /*.js, /*.css, /*.json, /*.png
          filters:
            - SetResponseHeader=Cache-Control, no-cache

      # ‚öôÔ∏è CONFIGURACI√ìN GLOBAL
      discovery:
        locator:
          enabled: false
      httpclient:
        connect-timeout: 10000
        response-timeout: 60s
      # üõ†Ô∏è CONFIGURACI√ìN DE FILTROS GLOBALES
      default-filters:
        # Permitir CORS preflight
        - name: DedupeResponseHeader
          args:
            name: Access-Control-Allow-Origin
            strategy: RETAIN_FIRST

# üìä MONITOREO
management:
  endpoints:
    web:
      exposure:
        include: health, info, metrics, gateway
      base-path: /management
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true

# üìù LOGGING DETALLADO
logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    org.springframework.web.server: DEBUG
    org.springframework.security: DEBUG  # Para debug de seguridad
    reactor.netty.http.client: DEBUG
    root: INFO